pipeline { 
      agent any
         stages {
               stage('Clone Repository') {
               steps {
               checkout scm
               }
         }
         stage('Build Image') {
               steps {
               sh "docker build -t johnenoel/capstone_image ."
               }
         }
         stage('Push image') {
               steps {
               sh 'docker push johnenoel/capstone_image'
               }
         }
         stage('copy the deployment & service files') {
               steps {
               sh "scp -o StrictHostKeyChecking=no gowebapp-deployment.yaml ec2-user@54.204.128.29:/home/ec2-user"
               sh "scp -o StrictHostKeyChecking=no gowebapp-service.yaml ec2-user@54.204.128.29:/home/ec2-user"
               sh "scp -o StrictHostKeyChecking=no k8s-service.yml ec2-user@54.204.128.29:/home/ec2-user"
               sh "scp -o StrictHostKeyChecking=no k8s-deploy.yml ec2-user@54.204.128.29:/home/ec2-user"
               sh "scp -o StrictHostKeyChecking=no minikube.yml ec2-user@54.204.128.29:/home/ec2-user"
               sh "scp -o StrictHostKeyChecking=no k8s-info.yml ec2-user@54.204.128.29:/home/ec2-user"
               }
         }       
         stage('Start minikube process') {
               steps {
               sh 'ansible-playbook /home/ec2-user/minikube.yml'
               } 
         }         
         stage('Making the deployment now') {
               steps {
               sh 'ansible-playbook k8s-deploy.yml'
               sh 'ansible-playbook k8s-service.yml'
               }
         }
         stage('Listing my deployments, pods and service') {
               steps {
               sh 'ansible-playbook /home/ec2-user/k8s-info.yml'
               }
         }
         stage('Testing') {
              steps {
                    echo 'Testing...'
              }
         }
    }
}

